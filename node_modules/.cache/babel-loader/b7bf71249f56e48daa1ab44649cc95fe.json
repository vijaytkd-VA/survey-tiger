{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\survey-tiger\\\\survey-tiger\\\\src\\\\components\\\\CreateSurvey.js\",\n    _s = $RefreshSig$();\n\nimport TypeSelector from \"./TypeSelector\";\nimport Question from \"./Question\";\nimport Options from \"./Options\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateSurvey = _ref => {\n  _s();\n\n  let {\n    squestions,\n    setSquestions\n  } = _ref;\n  const history = useNavigate();\n\n  const getRandom = () => {\n    return Math.floor(Math.random() * 1000 + 1);\n  };\n\n  const defaultOptionsState = [{\n    uid: getRandom(),\n    value: \"\"\n  }, {\n    uid: getRandom(),\n    value: \"\"\n  }];\n  const [qText, setQtext] = useState(\"\");\n  const [qType, setQtype] = useState(0);\n  const [options, setOptions] = useState(defaultOptionsState);\n\n  const addOptions = () => {\n    let newOption = {\n      uid: getRandom(),\n      value: \"\"\n    };\n    let updatedOptions = [...options];\n    updatedOptions.push(newOption);\n    setOptions(updatedOptions);\n  };\n\n  const deleteOptions = () => {\n    if (options.length === 2) {\n      alert(\"Error: A select type question should have atleast 2 options\");\n    } else {\n      let updatedOptions = [...options];\n      updatedOptions.pop();\n      setOptions(updatedOptions);\n    }\n  };\n\n  const updateOptionText = (id, text) => {\n    let updatedOptions = [...options];\n    let changeIndex = updatedOptions.findIndex(x => x.uid === id);\n    updatedOptions[changeIndex].value = text;\n    setOptions(updatedOptions);\n  };\n\n  const updateSurveyQuestion = () => {\n    let newSurveyQuestion = [...squestions];\n    let newQ = {\n      qtext: qText,\n      qtype: qType,\n      options: options\n    };\n    newSurveyQuestion.push(newQ);\n    setSquestions(newSurveyQuestion);\n    setQtype(0);\n    setQtext(\"\");\n    setOptions(defaultOptionsState);\n  };\n\n  const publish = () => {\n    updateSurveyQuestion();\n    history(\"/published\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TypeSelector, {\n      qtype: qType,\n      setQtype: setQtype\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), qType !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        onTextUpdate: setQtext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), options.map((opt, key) => /*#__PURE__*/_jsxDEV(Options, {\n        uid: opt.uid,\n        addOptions: addOptions,\n        deleteOptions: deleteOptions,\n        updateText: updateOptionText\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-1\",\n        onClick: () => updateSurveyQuestion(),\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-1\",\n        onClick: () => publish(),\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateSurvey, \"pigG5OPE6p+mzaGmZ9FR5LAt0AU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateSurvey;\nexport default CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["TypeSelector","Question","Options","useState","useNavigate","CreateSurvey","squestions","setSquestions","history","getRandom","Math","floor","random","defaultOptionsState","uid","value","qText","setQtext","qType","setQtype","options","setOptions","addOptions","newOption","updatedOptions","push","deleteOptions","length","alert","pop","updateOptionText","id","text","changeIndex","findIndex","x","updateSurveyQuestion","newSurveyQuestion","newQ","qtext","qtype","publish","map","opt","key"],"sources":["C:/Users/lenovo/Downloads/survey-tiger/survey-tiger/src/components/CreateSurvey.js"],"sourcesContent":["import TypeSelector from \"./TypeSelector\";\nimport Question from \"./Question\";\nimport Options from \"./Options\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nconst CreateSurvey = ({ squestions, setSquestions }) => {\n  const history = useNavigate();\n  const getRandom = () => {\n    return Math.floor(Math.random() * 1000 + 1);\n  };\n  const defaultOptionsState = [\n    { uid: getRandom(), value: \"\" },\n    { uid: getRandom(), value: \"\" },\n  ];\n  const [qText, setQtext] = useState(\"\");\n  const [qType, setQtype] = useState(0);\n  const [options, setOptions] = useState(defaultOptionsState);\n\n  const addOptions = () => {\n    let newOption = {\n      uid: getRandom(),\n      value: \"\",\n    };\n    let updatedOptions = [...options];\n    updatedOptions.push(newOption);\n    setOptions(updatedOptions);\n  };\n\n  const deleteOptions = () => {\n    if (options.length === 2) {\n      alert(\"Error: A select type question should have atleast 2 options\");\n    } else {\n      let updatedOptions = [...options];\n      updatedOptions.pop();\n      setOptions(updatedOptions);\n    }\n  };\n\n  const updateOptionText = (id, text) => {\n    let updatedOptions = [...options];\n    let changeIndex = updatedOptions.findIndex((x) => x.uid === id);\n    updatedOptions[changeIndex].value = text;\n    setOptions(updatedOptions);\n  };\n\n  const updateSurveyQuestion = () => {\n    let newSurveyQuestion = [...squestions];\n    let newQ = {\n      qtext: qText,\n      qtype: qType,\n      options: options,\n    };\n    newSurveyQuestion.push(newQ);\n    setSquestions(newSurveyQuestion);\n    setQtype(0);\n    setQtext(\"\");\n    setOptions(defaultOptionsState);\n  };\n\n  const publish = () => {\n    updateSurveyQuestion();\n    history(\"/published\");\n  };\n\n  return (\n    <div className=\"container\">\n      <TypeSelector qtype={qType} setQtype={setQtype} />\n\n      {qType !== 0 ? (\n        <>\n          <Question onTextUpdate={setQtext} />\n\n          {options.map((opt, key) => (\n            <Options\n              key={key}\n              uid={opt.uid}\n              addOptions={addOptions}\n              deleteOptions={deleteOptions}\n              updateText={updateOptionText}\n            />\n          ))}\n          <button\n            className=\"btn btn-primary m-1\"\n            onClick={() => updateSurveyQuestion()}\n          >\n            Add Question\n          </button>\n          <button className=\"btn btn-primary m-1\" onClick={() => publish()}>\n            Publish\n          </button>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CreateSurvey;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}